<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="0" total="17" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="109069" started-at="2019-09-02T07:14:39Z" finished-at="2019-09-02T07:16:28Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="109069" started-at="2019-09-02T07:14:39Z" finished-at="2019-09-02T07:16:28Z">
      <class name="tests.TC_CreateBranchesAndAddStaff_04">
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:tests.TC_CreateBranchesAndAddStaff_04@13deb50e]" name="setup" is-config="true" duration-ms="3344" started-at="2019-09-02T07:15:34Z" finished-at="2019-09-02T07:15:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="loginUser()[pri:1, instance:tests.TC_CreateBranchesAndAddStaff_04@13deb50e]" name="loginUser" duration-ms="2345" started-at="2019-09-02T07:15:38Z" finished-at="2019-09-02T07:15:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUser -->
        <test-method status="PASS" signature="createBranch(java.lang.String, java.lang.String)[pri:2, instance:tests.TC_CreateBranchesAndAddStaff_04@13deb50e]" name="createBranch" duration-ms="4925" started-at="2019-09-02T07:15:40Z" data-provider="Branchdata" finished-at="2019-09-02T07:15:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amsterdam]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[AMS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBranch -->
        <test-method status="PASS" signature="createBranch(java.lang.String, java.lang.String)[pri:2, instance:tests.TC_CreateBranchesAndAddStaff_04@13deb50e]" name="createBranch" duration-ms="5056" started-at="2019-09-02T07:15:45Z" data-provider="Branchdata" finished-at="2019-09-02T07:15:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Eindhoven]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[END]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBranch -->
        <test-method status="PASS" signature="createBranch(java.lang.String, java.lang.String)[pri:2, instance:tests.TC_CreateBranchesAndAddStaff_04@13deb50e]" name="createBranch" duration-ms="5027" started-at="2019-09-02T07:15:50Z" data-provider="Branchdata" finished-at="2019-09-02T07:15:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Utrecht]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[UTC]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBranch -->
        <test-method status="PASS" signature="createBranch(java.lang.String, java.lang.String)[pri:2, instance:tests.TC_CreateBranchesAndAddStaff_04@13deb50e]" name="createBranch" duration-ms="5041" started-at="2019-09-02T07:15:55Z" data-provider="Branchdata" finished-at="2019-09-02T07:16:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[London]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[LDN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBranch -->
        <test-method status="PASS" signature="createBranch(java.lang.String, java.lang.String)[pri:2, instance:tests.TC_CreateBranchesAndAddStaff_04@13deb50e]" name="createBranch" duration-ms="5027" started-at="2019-09-02T07:16:00Z" data-provider="Branchdata" finished-at="2019-09-02T07:16:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[IND]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBranch -->
        <test-method status="PASS" signature="createStaff(java.lang.String, java.lang.String)[pri:3, instance:tests.TC_CreateBranchesAndAddStaff_04@13deb50e]" name="createStaff" duration-ms="4372" started-at="2019-09-02T07:16:05Z" data-provider="Staffdata" finished-at="2019-09-02T07:16:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Amsterdam]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createStaff -->
        <test-method status="PASS" signature="createStaff(java.lang.String, java.lang.String)[pri:3, instance:tests.TC_CreateBranchesAndAddStaff_04@13deb50e]" name="createStaff" duration-ms="4475" started-at="2019-09-02T07:16:10Z" data-provider="Staffdata" finished-at="2019-09-02T07:16:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mark]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[London]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createStaff -->
        <test-method status="PASS" signature="createStaff(java.lang.String, java.lang.String)[pri:3, instance:tests.TC_CreateBranchesAndAddStaff_04@13deb50e]" name="createStaff" duration-ms="4500" started-at="2019-09-02T07:16:14Z" data-provider="Staffdata" finished-at="2019-09-02T07:16:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Raj]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createStaff -->
        <test-method status="PASS" signature="createStaff(java.lang.String, java.lang.String)[pri:3, instance:tests.TC_CreateBranchesAndAddStaff_04@13deb50e]" name="createStaff" duration-ms="4503" started-at="2019-09-02T07:16:19Z" data-provider="Staffdata" finished-at="2019-09-02T07:16:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bob]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Utrecht]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createStaff -->
        <test-method status="PASS" signature="createStaff(java.lang.String, java.lang.String)[pri:3, instance:tests.TC_CreateBranchesAndAddStaff_04@13deb50e]" name="createStaff" duration-ms="4542" started-at="2019-09-02T07:16:23Z" data-provider="Staffdata" finished-at="2019-09-02T07:16:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Marry]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Eindhoven]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createStaff -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.TC_CreateBranchesAndAddStaff_04@13deb50e]" name="tearDown" is-config="true" duration-ms="754" started-at="2019-09-02T07:16:28Z" finished-at="2019-09-02T07:16:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.TC_CreateBranchesAndAddStaff_04 -->
      <class name="tests.TC_RegisterNewAccountTest_03">
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:tests.TC_RegisterNewAccountTest_03@f6c48ac]" name="setup" is-config="true" duration-ms="3394" started-at="2019-09-02T07:15:28Z" finished-at="2019-09-02T07:15:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="registerNewAccount()[pri:0, instance:tests.TC_RegisterNewAccountTest_03@f6c48ac]" name="registerNewAccount" duration-ms="2391" started-at="2019-09-02T07:15:31Z" finished-at="2019-09-02T07:15:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at tests.TC_RegisterNewAccountTest_03.registerNewAccount(TC_RegisterNewAccountTest_03.java:76)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerNewAccount -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.TC_RegisterNewAccountTest_03@f6c48ac]" name="tearDown" is-config="true" duration-ms="849" started-at="2019-09-02T07:15:33Z" finished-at="2019-09-02T07:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.TC_RegisterNewAccountTest_03 -->
      <class name="tests.TC_LoginDataDriven_02">
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:tests.TC_LoginDataDriven_02@464bee09]" name="setup" is-config="true" duration-ms="3329" started-at="2019-09-02T07:14:49Z" finished-at="2019-09-02T07:14:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="loginDDT(java.lang.String, java.lang.String)[pri:0, instance:tests.TC_LoginDataDriven_02@464bee09]" name="loginDDT" duration-ms="5786" started-at="2019-09-02T07:14:52Z" data-provider="Logindata" finished-at="2019-09-02T07:14:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginDDT -->
        <test-method status="FAIL" signature="loginDDT(java.lang.String, java.lang.String)[pri:0, instance:tests.TC_LoginDataDriven_02@464bee09]" name="loginDDT" duration-ms="9542" started-at="2019-09-02T07:14:58Z" data-provider="Logindata" finished-at="2019-09-02T07:15:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[preetesh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Preetesh]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at tests.TC_LoginDataDriven_02.loginDDT(TC_LoginDataDriven_02.java:56)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginDDT -->
        <test-method status="FAIL" signature="loginDDT(java.lang.String, java.lang.String)[pri:0, instance:tests.TC_LoginDataDriven_02@464bee09]" name="loginDDT" duration-ms="9473" started-at="2019-09-02T07:15:08Z" data-provider="Logindata" finished-at="2019-09-02T07:15:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Soni]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Soni]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at tests.TC_LoginDataDriven_02.loginDDT(TC_LoginDataDriven_02.java:56)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginDDT -->
        <test-method status="FAIL" signature="loginDDT(java.lang.String, java.lang.String)[pri:0, instance:tests.TC_LoginDataDriven_02@464bee09]" name="loginDDT" duration-ms="9447" started-at="2019-09-02T07:15:17Z" data-provider="Logindata" finished-at="2019-09-02T07:15:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testuser]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at tests.TC_LoginDataDriven_02.loginDDT(TC_LoginDataDriven_02.java:56)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginDDT -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.TC_LoginDataDriven_02@464bee09]" name="tearDown" is-config="true" duration-ms="857" started-at="2019-09-02T07:15:27Z" finished-at="2019-09-02T07:15:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.TC_LoginDataDriven_02 -->
      <class name="tests.TC_Login_01">
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:tests.TC_Login_01@6eebc39e]" name="setup" is-config="true" duration-ms="3899" started-at="2019-09-02T07:14:40Z" finished-at="2019-09-02T07:14:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="userLogin()[pri:0, instance:tests.TC_Login_01@6eebc39e]" name="userLogin" duration-ms="4360" started-at="2019-09-02T07:14:43Z" finished-at="2019-09-02T07:14:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogin -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.TC_Login_01@6eebc39e]" name="tearDown" is-config="true" duration-ms="845" started-at="2019-09-02T07:14:48Z" finished-at="2019-09-02T07:14:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.TC_Login_01 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
